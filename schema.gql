# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type InvoiceLineItemsModel {
  description: String!
  amount: Float!
  price: Float!
  units: Float!
  vat: Float!
}

type InvoiceModel {
  created_at: DateTime
  updated_at: DateTime
  deleted_at: DateTime
  id: Int!
  name: String!
  status: String!
  quote_number: String!
  line_items: [InvoiceLineItemsModel!]!
  issued_at: DateTime
  customer_data: JSON
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Alert {
  id: Int
  name: String
  message: String!
}

type Query {
  getQuote(args: GetByIdArgs!): GetInvoiceById!
}

union GetInvoiceById = GetInvoiceSuccess | GetInvoiceFailure

type GetInvoiceSuccess implements ISuccess {
  code: ErrorCode
  statusCode: Int
  message: String
  alerts: [Alert!]
  data: InvoiceModel!
}

interface ISuccess {
  code: ErrorCode
  statusCode: Int
  message: String
  alerts: [Alert!]
}

enum ErrorCode {
  UNKNOWN
  SUCCESS
  FAILURE
  INVOICE_NOT_FOUND
}

type GetInvoiceFailure implements IFailure {
  code: ErrorCode
  statusCode: Int
  message: String
  alerts: [Alert!]!
}

interface IFailure {
  code: ErrorCode
  statusCode: Int
  message: String
  alerts: [Alert!]!
}

input GetByIdArgs {
  id: Int!
}

type Mutation {
  createInvoice(args: CreateInvoiceArgs!): CreateInvoice!
}

union CreateInvoice = CreateInvoiceSuccess | CreateInvoiceFailure

type CreateInvoiceSuccess implements ISuccess {
  code: ErrorCode
  statusCode: Int
  message: String
  alerts: [Alert!]
  data: InvoiceModel!
}

type CreateInvoiceFailure implements IFailure {
  code: ErrorCode
  statusCode: Int
  message: String
  alerts: [Alert!]!
}

input CreateInvoiceArgs {
  name: String
  line_items: [LineItemsArgs!]
  customer_data: JSON
}

input LineItemsArgs {
  description: String!
  amount: Float!
  price: Float!
  units: Float!
  vat: Float!
}